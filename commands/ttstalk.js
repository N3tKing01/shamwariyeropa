/*























































































































































































































































































































































































const axios = require("axios");

module.exports = {
    pattern: "ttstalk",
    desc: "Fetch TikTok user profile details",
    react: "üì±",
    category: "search",
    filename: __filename,
    use: ".ttstalk [username]",

    execute: async (conn, message, m, { from, q, reply, sender }) => {
        // Helper function to send messages with contextInfo
        const sendMessageWithContext = async (text, quoted = message) => {
            return await conn.sendMessage(from, {
                text: text,
                contextInfo: {
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: "120363347365643318@newsletter",
                        newsletterName: "BLEADER-MD - LDT",
                        serverMessageId: 200
                    }
                }
            }, { quoted: quoted });
        };

        try {
            if (!q) {
                return await sendMessageWithContext("‚ùé Please provide a TikTok username.\n\n*Example:* .ttstalk JoshKing.levels");
            }

            // React üì±
            if (module.exports.react) {
                await conn.sendMessage(from, { react: { text: module.exports.react, key: message.key } });
            }

            const apiUrl = `https://api.princetechn.com/api/stalk/tiktokstalk?apikey=prince&username=${encodeURIComponent(q)}`;
            const { data } = await axios.get(apiUrl);

            if (!data.success || !data.result) {
                return await sendMessageWithContext("‚ùå User not found or API returned no data.");
            }

            const user = data.result;

            const profileInfo = `‚ï≠‚îÅ‚îÅ„Äî *üé≠ TikTok Profile* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ üë§ *Username*: @${user.username}
‚îÉ üìõ *Nickname*: ${user.name || "Unknown"}
‚îÉ ‚úÖ *Verified*: ${user.verified ? "Yes ‚úÖ" : "No ‚ùå"}
‚îÉ üîí *Private*: ${user.private ? "Yes üîí" : "No üåç"}
‚îÉ üìù *Bio*: ${user.bio || "No bio available."}
‚îÉ
‚îÉ üìä *Statistics*:
‚îÉ üë• Followers: ${user.followers?.toLocaleString() || "0"}
‚îÉ üë§ Following: ${user.following?.toLocaleString() || "0"}
‚îÉ ‚ù§Ô∏è Likes: ${user.likes?.toLocaleString() || "0"}
‚îÉ
‚îÉ üÜî *ID*: ${user.id || "N/A"}
‚îÉ üîó *Profile*: https://www.tiktok.com/@${user.username}
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îà‚ä∑
> ¬© Powered by MIDKBAN-TECH - LDT `;

            if (user.avatar) {
                await conn.sendMessage(from, {
                    image: { url: user.avatar },
                    caption: profileInfo,
                    contextInfo: {
                        forwardingScore: 999,
                        isForwarded: true,
                        forwardedNewsletterMessageInfo: {
                            newsletterJid: "120363347365643318@newsletter",
                            newsletterName: "BLEADER-MD - LDT",
                            serverMessageId: 200
                        }
                    }
                }, { quoted: message });
            } else {
                await sendMessageWithContext(profileInfo);
            }

        } catch (error) {
            console.error("‚ùå Error in TikTok stalk command:", error);
            await sendMessageWithContext("‚ö†Ô∏è An error occurred while fetching TikTok profile data.");
        }
    }
};